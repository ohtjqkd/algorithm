# 오르막 수

N = int(input())

# dp[i] -> i로 끝나는 경우의 수
# 자리수만큼 반복
dp = [1] * 10
for i in range(N):
    for j in range(1, 10):
        dp[j] = (dp[j] + dp[j - 1]) % 10007
print(dp[-1])

# 2자리 수의 경우
#  0 1 2 3 4 5 6 7 8 9
#0 1 1 1 1 1 1 1 1 1 1
#1   1 1 1 1 1 1 1 1 1
#2     1 1 1 1 1 1 1 1
#3       1 1 1 1 1 1 1
#4         1 1 1 1 1 1
#5           1 1 1 1 1
#6             1 1 1 1
#7               1 1 1
#8                 1 1
#9                   1
#  1 2 3 4 5 6 7 8 9 10

#  0 1 2 3 4 5 6 7 8 9
#0 1 1 1 1 1 1 1 1 1 1
#1   1 1 1 1 1 1 1 1 1
#2     1 1 1 1 1 1 1 1
#3       1 1 1 1 1 1 1
#4         1 1 1 1 1 1
#5           1 1 1 1 1
#6             1 1 1 1
#7               1 1 1
#8                 1 1
#9                   1
#  1 4 9 16 25 36 49 64 81 100
# 반복을 하면서 차원을 늘려가는 느낌인가?
print(sum([(i**2+i)//2 for i in range(1, 11)]))
    
print(sum([1,3,6,10,15,21,28,36,45,55]))