# 2xN 타일링

# 유명한 N타일링 기본적으로 N이 1 증가할 때 가능한 경우의 수는 
# dp[n - 1]의 모든 경우에 수에 | <- 이런 모양으로 붙이는 경우와 dp[n - 2]의 경우에서 = 의 모양으로 붙이는 경우를 더한 것이다.
# dp[n - 2]에서 ||의 모양으로 붙이는 것은 dp[n - 1]에서 |을 붙이는 경우와 중복되기 때문에 고려하지 않는다.
# 점화식의 시작이 되는 dp[0], dp[1] 을 1과 2로 초기화시키고 반복함

N = int(input())
dp = [0] * max(N, 2)
dp[0], dp[1] = 1, 2

for i in range(2, len(dp)):
    dp[i] = (dp[i - 1] + dp[i - 2]) % 10007
print(dp[N - 1])